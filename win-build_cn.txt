######################################################################################
#                                                                                    #
#          Windows下编译wifiminer步骤说明 (基于MSYS2/Windows):                        #
#                                                                                    #
######################################################################################

**************************************************************************************
* 说明                                                                               *
**************************************************************************************
本编译基于windows下的MSYS2编译环境,使用MinGW-w64编译链进行编译.编译中使用了libcurl-devel 
zlib-devel libwinpthread这些依赖包,需要安装. 
以下的编译步骤仅在Win 7 64位系统下测试有效.

如果你觉得本文档对你有帮助,并且愿意砸钱,请砸向以下地址:
wdsBSfSs3cCyYh12PrSFJPZjdcLgN8zC5i
**************************************************************************************

**************************************************************************************
* 1. 安装MSYS2                                                                       *
**************************************************************************************
从http://sourceforge.net/projects/msys2/下载MSYS2安装包,可以下载最新版本的安装包,本人
下载的是msys2-x86_64-20170918.exe, 不保证其他版本是否一样结果.
然后运行安装包,按提示进行安装,注意安装目录尽量简短,避免出问题.
安装完要配置HOME路径,这就是shell的home路径.
**************************************************************************************

**************************************************************************************
* 2. 配置MSYS2                                                                       *
**************************************************************************************
以下步骤可以参考网上教程操作.
2.1 运行msys2_shell.cmd,执行:
$ pacman -Sy
然后升级核心包
$ pacman -S --needed filesystem msys2-runtime bash libreadline libiconv libarchive 
libgpgme libcurl pacman ncurses libintl

如果提示msys2-runtime 与 catgets冲突,则需要先删除catgets

$ pacman -R catgets libcatgets

完成后关闭shell,运行 autorebase.bat

继续执行msys2_shell.cmd,升级其他包

$ pacman -Su

2.2 安装需要包
MSYS2安装后会有三个shell的快捷方式,分别是
MSYS2 MinGW 32-bit
MSYS2 MinGW 64-bit
MSYS2 MSYS
下面的操作可以进入这些shell操作,对于公用的库,不分32/64的可以在MSYS2 MSYS中安装,其他则
需要在相对应的shell中运行.

MSYS2使用pacman作为包管理工具,可以使用以下命令查询可用包:
$ pacman -Sl | grep XXX
安装包:
$ pacman -S XXX

编译wifiminer需要的包包括:
gcc make autoconf automake libcurl-devel zlib zlib-devel libwinpthread

包安装要注意,部分包是是区分位数的,必须安装相应位数的包到对应的shell目录中.
**************************************************************************************

**************************************************************************************
* 3. 编译wifiminer                                                                   *
**************************************************************************************
编译X32和X64的步骤操作是一致的,只需在操作选择对应的MSYS2 shell即可.

首先要获取项目源码,你看到本文档,可能已经下来了源码. 如果没有请到https://github.com/wificoin-project/wifiminer使用git下载源码到本地.
运行对应的shell,然后切换到wifiminer的项目源码目录中,在shell窗口中运行以下命令:

$ ./autogen.sh

$ LIBCURL="-lcurldll" ./configure CFLAGS="-O3"

$ make

在configure过程可能会遇到libcurl的报错,如:
checking for the version of libcurl... 7.58.0
checking for libcurl >= version 7.15.2... yes
checking whether libcurl is usable... no
configure: error: Missing required libcurl >= 7.15.2

可以到https://curl.haxx.se/gknw.net/7.40.0/下载对应位数的curl-7.40.0-devel-mingw64包,
解压后把bin,lib,include目录复制到mingw32或mingw64的对应目录中.

如无意外,minerd.exe就是在项目目录中生成. 编译完成.
**************************************************************************************

**************************************************************************************
* 4. 运行wifiminer                                                                   *
**************************************************************************************
编译后的minerd.exe是无法在shell中运行的,而且还有依赖库.

请把minerd.exe以及MSYS2的mingw32\bin或mingw64\bin中的以下dll拷到一个目录中:
libcurl.dll         
libeay32.dll        
libwinpthread-1.dll          
ssleay32.dll        
zlib1.dll           

这里一定要注意,必须是对应编译位数的bin目录中的dll,否则会出现7b错误无法运行.

然后就可以在windows命令终端中运行:

> minerd --help

如果没有报错并打印出操作提示,则恭喜你,wifiminer成功编译完成了.
**************************************************************************************











